<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2022-01 on OTTFF&#39;s Blog</title>
    <link>https://ottffyzy.github.io/archives/2022-01/</link>
    <description>Recent content in 2022-01 on OTTFF&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 27 Jan 2022 00:57:41 -0800</lastBuildDate><atom:link href="https://ottffyzy.github.io/archives/2022-01/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>《Learning Python》 笔记 第 4 章 介绍 Python 对象类型</title>
      <link>https://ottffyzy.github.io/notes/learningpython/c04/</link>
      <pubDate>Thu, 27 Jan 2022 00:57:41 -0800</pubDate>
      
      <guid>https://ottffyzy.github.io/notes/learningpython/c04/</guid>
      <description>第 4 章 介绍 Python 对象类型 Python 知识结构 程序由模块构成 模块包含语句 语句包含表达式 表达式创建并处理对象 为什么要使用内置类型 容易编写，可扩展，往往效率高，是语言标准的一部分。 Python 核心数据类型 数字、字符串、列表、字典、</description>
    </item>
    
    <item>
      <title>[算法][DP] 高维前缀和 SOS DP</title>
      <link>https://ottffyzy.github.io/algos/dp/sosdp/</link>
      <pubDate>Sun, 23 Jan 2022 21:53:06 -0800</pubDate>
      
      <guid>https://ottffyzy.github.io/algos/dp/sosdp/</guid>
      <description>高维前缀和 SOS DP 子集和问题 其实这类算法更多的是解决子集和 （sum of subset） 问题，因此也叫 SOS DP。 $$ sum[i] = \sum_{j \subseteq i} a[j] $$ 即 $$ sum[i] = \sum_{j | i = i} a[j] $$ 这里我们有个非常显然的做法是可以枚举所有集合判断是否是当前所求</description>
    </item>
    
    <item>
      <title>[Vim] usr_11</title>
      <link>https://ottffyzy.github.io/notes/vimusermanual/c11/</link>
      <pubDate>Wed, 19 Jan 2022 21:13:07 -0800</pubDate>
      
      <guid>https://ottffyzy.github.io/notes/vimusermanual/c11/</guid>
      <description>usr_11 从崩溃中恢复 11.1 基本恢复 一般来说如果硬盘没坏，崩溃了之后，文件的大部分内容可以恢复。 vim -r &amp;lt;FILENAME&amp;gt;这时 Vim 会读取 .swp 文件。为安全起见可以另存这个新文件。 可以用 vimdiff 比较新旧文件。 如果编辑</description>
    </item>
    
    <item>
      <title>《Learning Python》 笔记 第 3 章 你应如何运行程序</title>
      <link>https://ottffyzy.github.io/notes/learningpython/c03/</link>
      <pubDate>Wed, 19 Jan 2022 15:54:54 -0800</pubDate>
      
      <guid>https://ottffyzy.github.io/notes/learningpython/c03/</guid>
      <description>第 3 章 你应如何运行程序 交互式命令行模式 开始一个交互式会话 &amp;gt; python Windows （cmd）上使用 &amp;lt;CTRL-Z&amp;gt; UNIX/PowerShell 上使用 &amp;lt;CTRL-D&amp;gt; 结束会话。 Python 3.3 中的新 Windows 选项：PATH 和 启动器 启动器用户可以输入 py 代替 python 并避免一些配置步骤。启动器可以更好的显式</description>
    </item>
    
    <item>
      <title>《Learning Python》 笔记 第 2 章 Python 如何运行程序</title>
      <link>https://ottffyzy.github.io/notes/learningpython/c02/</link>
      <pubDate>Mon, 17 Jan 2022 23:47:31 -0800</pubDate>
      
      <guid>https://ottffyzy.github.io/notes/learningpython/c02/</guid>
      <description>《Learning Python》 笔记 第 2 章 Python 如何运行程序 Python 解释器简介 Python 是一门编程语言，同时是一个名为解释器的软件包。 解释器是让其他程序运行起来的程序，是代码与机器的计算机硬件之间的软件逻辑层。 Python 包安装</description>
    </item>
    
    <item>
      <title>[Vim] usr_09</title>
      <link>https://ottffyzy.github.io/notes/vimusermanual/c09/</link>
      <pubDate>Mon, 17 Jan 2022 22:14:37 -0800</pubDate>
      
      <guid>https://ottffyzy.github.io/notes/vimusermanual/c09/</guid>
      <description>usr_09 使用 GUI 版本 09.1 GUI 版本的组件 gvim &amp;lt;FILENAME&amp;gt; vim -g &amp;lt;FILENAME&amp;gt; 标题栏文件名后可能会跟一个符号 - 文件不能被修改 + 已经被修改过 = 文件只读 =+ 只读但被修改过 没有标记则是一个普通的打开但没修改过的文件。 09.2 使用鼠标 使用鼠标可以移动光标和选</description>
    </item>
    
    <item>
      <title>[Vim] usr_08</title>
      <link>https://ottffyzy.github.io/notes/vimusermanual/c08/</link>
      <pubDate>Mon, 17 Jan 2022 18:42:42 -0800</pubDate>
      
      <guid>https://ottffyzy.github.io/notes/vimusermanual/c08/</guid>
      <description>usr_08 分割窗口 08.1 分割窗口 增加一个水平的分割线 :split要在窗口间跳转可以使用 &amp;lt;CTRL-W&amp;gt;w或 &amp;lt;CTRL-W&amp;gt;&amp;lt;CTRL-W&amp;gt;关闭当前窗口 :close多数时候类似于</description>
    </item>
    
    <item>
      <title>《Learning Python》 笔记 第 1 章 问答环节</title>
      <link>https://ottffyzy.github.io/notes/learningpython/c01/</link>
      <pubDate>Mon, 17 Jan 2022 16:47:13 -0800</pubDate>
      
      <guid>https://ottffyzy.github.io/notes/learningpython/c01/</guid>
      <description>《Learning Python》 笔记 第 1 章 问答环节 Python 是一门脚本语言吗 Python 是通用型编程语言，时常扮演脚本语言的角色。 Python 的缺点 比起完全编译并比较底层的语言，执行速度不够快。 使用 Python 可以做什么 系统编程、GUI、</description>
    </item>
    
    <item>
      <title>[Vim] usr_07</title>
      <link>https://ottffyzy.github.io/notes/vimusermanual/c07/</link>
      <pubDate>Mon, 17 Jan 2022 00:30:44 -0800</pubDate>
      
      <guid>https://ottffyzy.github.io/notes/vimusermanual/c07/</guid>
      <description>usr_07 编辑多个文件 07.1 编辑另一个文件 :edit &amp;lt;FILENAME&amp;gt;需要先保存当前文件的修改，或者使用 :edit! &amp;lt;FILENAME&amp;gt;放弃当前文件修改并打开另一个文件。 想编辑其他文件又不保存当前文件则可</description>
    </item>
    
    <item>
      <title>[Vim] usr_06</title>
      <link>https://ottffyzy.github.io/notes/vimusermanual/c06/</link>
      <pubDate>Mon, 17 Jan 2022 00:09:44 -0800</pubDate>
      
      <guid>https://ottffyzy.github.io/notes/vimusermanual/c06/</guid>
      <description>usr_06 使用语法高亮 06.1 功能激活 :syntax enable只在支持色彩的终端中生效，在 vimrc 中加入 if &amp;amp;t_Co &amp;gt; 1 syntax enableendif只在 Gui 版本生效则在 gvimrc 加入 syntax enable06.2 颜色显示不出来或者显示出错误的颜色怎么办？ 终端不支持彩色，这时 vim 会</description>
    </item>
    
    <item>
      <title>[Vim] usr_05</title>
      <link>https://ottffyzy.github.io/notes/vimusermanual/c05/</link>
      <pubDate>Sat, 15 Jan 2022 17:10:30 -0800</pubDate>
      
      <guid>https://ottffyzy.github.io/notes/vimusermanual/c05/</guid>
      <description>usr_05 选项设置 05.1 vimrc 文件 可以使用如下命令打开 Vim 配置文件 :edit $MYVIMRC可以在开头放上 source $VIMRUNTIME/defaults.vim来导入默认配置。vimrc 文件可以包含任何冒号命令。 05.2 vimrc 示例解释 if has(&amp;#34;vms&amp;#34;) set</description>
    </item>
    
    <item>
      <title>[Vim] usr_04</title>
      <link>https://ottffyzy.github.io/notes/vimusermanual/c04/</link>
      <pubDate>Thu, 13 Jan 2022 23:52:19 -0800</pubDate>
      
      <guid>https://ottffyzy.github.io/notes/vimusermanual/c04/</guid>
      <description>usr_04 作小改动 04.1 操作符与动作 Vim 只删除从当前位置到”动作“把光标移动到的位置的前一个位置。是否包括光标所在的字符取决于你使用的移动命令。包括当前字符在参考手册中称为 inclusive、否则成为 exclusi</description>
    </item>
    
    <item>
      <title>[Vim] usr_03</title>
      <link>https://ottffyzy.github.io/notes/vimusermanual/c03/</link>
      <pubDate>Tue, 11 Jan 2022 22:38:05 -0800</pubDate>
      
      <guid>https://ottffyzy.github.io/notes/vimusermanual/c03/</guid>
      <description>usr_03 移动 03.1 词移动 移动到下一个词开头位置 w移动到上一个词开头 b移动到下一个 单词末尾 e移动到前一个 单词末尾 ge一个单词以非单词字符（. - ( 等）结尾，要改变那些是单词字符详见 iskeyword 复位 iskeyword :set iskeyword$如果</description>
    </item>
    
    <item>
      <title>[Vim] usr_02</title>
      <link>https://ottffyzy.github.io/notes/vimusermanual/c02/</link>
      <pubDate>Tue, 11 Jan 2022 00:23:08 -0800</pubDate>
      
      <guid>https://ottffyzy.github.io/notes/vimusermanual/c02/</guid>
      <description>usr_02 Vim 初步 02.1 第一次运行 Vim &amp;gt;gvim file.txt &amp;gt;vim file.txt 02.2 插入文本 普通模式 -&amp;gt; 插入模式 Insert。 i插入模式 -&amp;gt; 普通模式 &amp;lt;ESC&amp;gt;显示当前模式 :set showmode02.3 光标移动 kh l j02.4 删除字符 删除光标处的字符 x删除整行 dd删除两行（与下行）</description>
    </item>
    
    <item>
      <title>[Vim] usr_01</title>
      <link>https://ottffyzy.github.io/notes/vimusermanual/c01/</link>
      <pubDate>Mon, 10 Jan 2022 21:03:05 -0800</pubDate>
      
      <guid>https://ottffyzy.github.io/notes/vimusermanual/c01/</guid>
      <description>usr_01 检查是否是 vi 兼容模式 :set compatible?查找配置文件 :scriptnames运行 vim tutor &amp;gt;vimtutor vimtutor 笔记 移动 ^ k&amp;lt; h l &amp;gt; j v不保存退出 :q!&amp;lt;ENTER&amp;gt;保存退出 :wq&amp;lt;ENTER&amp;gt; 普通模式 删除光标位置的字符 x普通</description>
    </item>
    
  </channel>
</rss>
